@using Hackathon.Models;
@model Question
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.NumPoints)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NumPoints)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QuestionType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QuestionType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QuestionText)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QuestionText)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.QuestionCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.QuestionCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MCAnswers)
        </dt>
        <dd class="col-sm-10">
            @for(int i = 0; i < Model.MCAnswers.Count(); i++)
            {
                <p>@(i + 1)) @Model.MCAnswers.ElementAt(i)</p>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Correct_MCAnswer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Correct_MCAnswer)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tags)
        </dt>
        <dd class="col-sm-10">
            @foreach (string s in Model.Tags)
            {
                <span>@s  </span>
            }
        </dd>
    </dl>
</div>